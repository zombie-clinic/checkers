plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.openapi.generator" version '7.0.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'org.openapi.generator'

openApiValidate {
    inputSpec = ("$projectDir/src/main/resources/checkers-backend.yaml")
    recommend = true
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$projectDir/src/main/resources/checkers-backend.yaml")
    outputDir.set("$buildDir/generated/openapi")
    apiPackage.set("com.example.demo.api")
    modelPackage.set("com.example.demo.domain")
    configOptions.set([
            dateLibrary               : "java8",
            generateApis              : "true",
            generateApiTests          : "false",
            generateModels            : "false",
            generateModelTests        : "false",
            generateModelDocumentation: "false",
            generateSupportingFiles   : "false",
            skipDefaultInterface      : "true",
            hideGenerationTimestamp   : "false",
            interfaceOnly             : "true",
            library                   : "spring-boot",
            serializableModel         : "true",
            useBeanValidation         : "true",
            useTags                   : "true",
            implicitHeaders           : "true",
            openApiNullable           : "false",
            oas3                      : "true",
    ]
    )
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.h2database:h2:2.2.222'
    testImplementation 'com.h2database:h2:2.2.222'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs("$buildDir/generated/openapi/src/main/java")
        }
    }
}


tasks.openApiGenerate {
    doLast {
        delete(
                "$buildDir/generated/openapi/src/main/java/com/example/demo/api/ApiUtil.java"
        )
    }
}

tasks.openApiGenerate.configure {
    mustRunAfter tasks.named('clean')
}

tasks.named('compileJava').configure {
    dependsOn tasks.named('openApiGenerate')
}


tasks.named('build').configure {
    mustRunAfter tasks.named('openApiGenerate')
}

tasks.named('bootRun').configure {
    mustRunAfter 'build'
}
