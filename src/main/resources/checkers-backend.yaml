openapi: 3.0.3
info:
  title: Checkers OpenAPI 3.0 specification
  description: This is API for checkers-react-game backend
  version: 0.1
servers:
  - url: localhost:8080/api/v1
paths:
  /game:
    get:
      tags:
        - game
      summary: Get games
      description: Get games by their progress or fetch all games if progress parameter is empty
      operationId: getGamesByProgress
      parameters:
        - name: progress
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [STARTING, ONGOING, COMPLETED, ARCHIVED]
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameResponse'
        '405':
          description: Invalid input
    post:
      tags:
        - game
      summary: Start a new game
      description: Start a new game
      operationId: startGame
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameResponse'
        '405':
          description: Invalid input
  /game/{gameId}:
    get:
      tags:
        - game
      summary: Find game by ID
      description: Returns a single game
      operationId: getGameById
      parameters:
        - name: gameId
          in: path
          description: ID of a game to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameResponse'
        '400':
          description: Invalid game id supplied
        '404':
          description: Game not found
  /move/{gameId}:
    put:
      tags:
        - game
      summary: Make a move within a game
      description: Start a new game
      operationId: move
      parameters:
        - name: gameId
          in: path
          description: ID of an starting/ongoing game
          required: true
          schema:
            type: string
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveResponse'
        '405':
          description: Invalid input

components:
  schemas:
    GameResponse:
      type: object
      properties:
        id:
          type: string
        progress:
          type: string
    MoveResponse:
      type: object
      properties:
        gameId:
          type: string
        state:
          type: string
    MoveRequest:
      type: object
      properties:
        side:
          type: string
        move:
          type: string
        state:
          type: string


